{"version":3,"sources":["utils/upDateScore.js","utils/handleUserRankings.js","actions/types.js","actions/authAction.js","components/Game/index.js","components/Login/index.js","components/Signup/index.js","App.js","reportWebVitals.js","reducers/authReducer.js","reducers/index.js","providers/ReduxProvider.js","index.js"],"names":["updateScore","status","dispatch","a","fetch","method","credentials","headers","body","JSON","stringify","result","json","response","console","log","type","USER_LOGIN_TRUE","USER_LOGOUT","USER_LOGIN_FALSE","userLogout","handleUserLogin","email","password","formValues","login","Game","useDispatch","useState","IDLE","UP","DOWN","LEFT","RIGHT","DIRECTION","rounds","colors","showTable","setShowTable","useEffect","Ball","new","incrementedSpeed","width","height","x","this","canvas","y","moveX","moveY","speed","Paddle","side","score","move","initialize","document","querySelector","context","getContext","style","player","call","paddle","ball","running","over","turn","timer","round","color","menu","listen","endGameMenu","text","font","fillStyle","fillRect","fillText","setTimeout","Object","assign","draw","update","_resetTurn","_turnDelayIsOver","Math","random","floor","_generateRoundColor","clearRect","beginPath","setLineDash","moveTo","lineTo","lineWidth","strokeStyle","stroke","textAlign","toString","loop","requestAnimationFrame","addEventListener","key","window","keyCode","victor","loser","Date","getTime","newColor","length","className","onClick","handleUserRankings","then","val","sortedrankedVal","map","item","username","wins","defeats","rank","sort","b","index","class","Login","e","preventDefault","target","value","onSubmit","src","alt","for","placeholder","name","required","minlength","backgroundColor","to","Signup","history","useNavigate","signup","alert","App","loginState","useSelector","state","authState","userLoggedIn","checkLogin","basename","process","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","authReducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReduxProvider","children","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0dd56a29.chunk.js","sourcesContent":["\nexport default async function updateScore(status,dispatch) {\n\n    let result  = await fetch(\"https://gameback-end.herokuapp.com/update\", {\n                        method: \"POST\",\n                        credentials: \"include\",\n                        headers: {\n                            'Content-Type': 'application/json;charset=utf-8'\n                        },\n                        body: JSON.stringify({status})\n                    })\n    let response = await result.json()\n\n    console.log(response)\n    if(response.response == 'invalid cookie'){\n\n        dispatch({ type: 'USER_LOGOUT'})\n    } \n        \n\n\n}","\nexport default async function handleUserRankings() {\n\n    let result  = await fetch(\"https://gameback-end.herokuapp.com/rankings\", {\n                        method: \"GET\",\n                        credentials: \"include\",\n                        headers: {\n                            'Content-Type': 'application/json;charset=utf-8'\n                        },\n                    })\n    let response = await result.json()\n\n    return response\n        \n\n\n}","export const USER_LOGIN_TRUE = \"USER_LOGIN_TRUE\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\nexport const USER_LOGIN_FALSE = \"USER_LOGIN_FALSE\"","import {  USER_LOGIN_TRUE, USER_LOGOUT  } from \"./types\"\r\n\r\nexport const userLogin = () => {\r\n    return {\r\n        type: USER_LOGIN_TRUE,\r\n    }\r\n}\r\n\r\nexport const userLogout = () => {\r\n    return {\r\n        type: USER_LOGOUT,\r\n    }\r\n}\r\n\r\n\r\nexport const handleUserLogin = (email,password) => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            let formValues = {\r\n                email ,\r\n                password\r\n              }\r\n\r\n            let login = await fetch('https://gameback-end.herokuapp.com/login', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(formValues)\r\n              })\r\n        \r\n              let result = await login.json();\r\n        \r\n              console.log(result)\r\n\r\n              if(result.login) {\r\n                dispatch(userLogin()) \r\n              }\r\n              \r\n            \r\n        } catch (e) {\r\n            //localStorage.removeItem(authToken);\r\n            //onFail()\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const handleUserLogout = () => async (dispatch) => {\r\n\r\n    try {\r\n        await fetch(\"https://gameback-end.herokuapp.com/logout\", {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            })\r\n        \r\n        dispatch(userLogout())\r\n        \r\n        \r\n        \r\n    } catch (e) {\r\n        dispatch(userLogout())\r\n    }\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport updateScore from \"../../utils/upDateScore\";\nimport handleUserRankings from \"../../utils/handleUserRankings\";\nimport { handleUserLogout } from \"../../actions/authAction\";\nimport \"./index.css\";\n\nfunction Game() {\n  const dispatch = useDispatch();\n\n  const [DIRECTION] = useState({\n    IDLE: 0,\n    UP: 1,\n    DOWN: 2,\n    LEFT: 3,\n    RIGHT: 4,\n  });\n\n  const [rounds] = useState([20]);\n  const [colors] = useState([\n    \"#1abc9c\",\n    \"#2ecc71\",\n    \"#3498db\",\n    \"#e74c3c\",\n    \"#9b59b6\",\n  ]);\n\n  const [showTable , setShowTable] = useState(false)\n\n  // main code of game\n  useEffect(() => {\n    // The ball object (The cube that bounces back and forth)\n    var Ball = {\n      new: function (incrementedSpeed) {\n        return {\n          width: 18,\n          height: 18,\n          x: this.canvas.width / 2 - 9,\n          y: this.canvas.height / 2 - 9,\n          moveX: DIRECTION.IDLE,\n          moveY: DIRECTION.IDLE,\n          speed: incrementedSpeed || 9,\n        };\n      },\n    };\n\n    // The paddle object (The two lines that move up and down)\n    var Paddle = {\n      new: function (side) {\n        return {\n          width: 18,\n          height: 70,\n          x: side === \"left\" ? 150 : this.canvas.width - 150, // x position of paddle\n          y: this.canvas.height / 2 - 35, // y position of paddle\n          score: 0,\n          move: DIRECTION.IDLE,\n          speed: 8,\n        };\n      },\n    };\n\n    var Game = {\n      initialize: function () {\n        this.canvas = document.querySelector(\"canvas\");\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.canvas.width = 1400; // *****************\n        this.canvas.height = 1000; // *****************\n\n        this.canvas.style.width = this.canvas.width / 2 + \"px\"; // *****************\n        this.canvas.style.height = this.canvas.height / 2 + \"px\"; // *****************\n\n        this.player = Paddle.new.call(this, \"left\"); // **********\n        this.paddle = Paddle.new.call(this, \"right\"); // **********\n        this.ball = Ball.new.call(this);\n\n        this.paddle.speed = 8; // **********\n        this.running = this.over = false; // **********\n        this.turn = this.paddle;\n\n        console.log(this.turn); // **********\n        this.timer = this.round = 0; // **********\n        this.color = \"#2c3e50\"; // **********\n\n        Game.menu();\n        Game.listen();\n      },\n\n      endGameMenu: function (text) {\n        // Change the canvas font size and color\n        Game.context.font = \"50px Courier New\";\n        Game.context.fillStyle = this.color;\n\n        // Draw the rectangle behind the 'Press any key to begin' text.\n        Game.context.fillRect(\n          Game.canvas.width / 2 - 350,\n          Game.canvas.height / 2 - 48,\n          700,\n          100\n        );\n\n        // Change the canvas color\n        Game.context.fillStyle = \"#ffffff\";\n\n        // Draw the end game menu text ('Game Over' and 'Winner')\n        Game.context.fillText(\n          text,\n          Game.canvas.width / 2,\n          Game.canvas.height / 2 + 15\n        );\n\n        setTimeout(function () {\n          Game = Object.assign({}, Game);\n          Game.initialize();\n        }, 3000);\n      },\n\n      // **********\n      menu: function () {\n        // Draw all the Game objects in their current state\n        console.log(Game);\n        Game.draw();\n\n        // Change the canvas font size and color\n        this.context.font = \"50px Courier New\";\n        this.context.fillStyle = this.color;\n\n        // Draw the rectangle behind the 'Press any key to begin' text.\n        this.context.fillRect(\n          this.canvas.width / 2 - 350,\n          this.canvas.height / 2 - 48,\n          700,\n          100\n        );\n\n        // Change the canvas color\n        this.context.fillStyle = \"#ffffff\";\n\n        // Draw the 'press any key to begin' text\n        this.context.fillText(\n          \"Press any key to begin\",\n          this.canvas.width / 2,\n          this.canvas.height / 2 + 15\n        );\n      }, // **********\n\n      // Update all objects (move the player, paddle, ball, increment the score, etc.)\n      update: function () {\n        if (!this.over) {\n          // If the ball collides with the bound limits - correct the x and y coords.\n          if (this.ball.x <= 0)\n            Game._resetTurn.call(this, this.paddle, this.player);\n          if (this.ball.x >= this.canvas.width - this.ball.width)\n            Game._resetTurn.call(this, this.player, this.paddle);\n          if (this.ball.y <= 0) this.ball.moveY = DIRECTION.DOWN;\n          if (this.ball.y >= this.canvas.height - this.ball.height)\n            this.ball.moveY = DIRECTION.UP;\n\n          // Move player if they player.move value was updated by a keyboard event\n          if (this.player.move === DIRECTION.UP)\n            this.player.y -= this.player.speed;\n          else if (this.player.move === DIRECTION.DOWN)\n            this.player.y += this.player.speed;\n\n          // On new serve (start of each turn) move the ball to the correct side\n          // and randomize the direction to add some challenge.\n          if (Game._turnDelayIsOver.call(this) && this.turn) {\n            this.ball.moveX =\n              this.turn === this.player ? DIRECTION.LEFT : DIRECTION.RIGHT;\n            this.ball.moveY = [DIRECTION.UP, DIRECTION.DOWN][\n              Math.round(Math.random())\n            ];\n            this.ball.y =\n              Math.floor(Math.random() * this.canvas.height - 200) + 200;\n            this.turn = null;\n          }\n\n          // If the player collides with the bound limits, update the x and y coords.\n          if (this.player.y <= 0) this.player.y = 0;\n          else if (this.player.y >= this.canvas.height - this.player.height)\n            this.player.y = this.canvas.height - this.player.height;\n\n          // Move ball in intended direction based on moveY and moveX values\n          if (this.ball.moveY === DIRECTION.UP)\n            this.ball.y -= this.ball.speed / 1.5;\n          else if (this.ball.moveY === DIRECTION.DOWN)\n            this.ball.y += this.ball.speed / 1.5;\n          if (this.ball.moveX === DIRECTION.LEFT)\n            this.ball.x -= this.ball.speed;\n          else if (this.ball.moveX === DIRECTION.RIGHT)\n            this.ball.x += this.ball.speed;\n\n          // Handle paddle (AI) UP and DOWN movement\n          if (this.paddle.y > this.ball.y - this.paddle.height / 2) {\n            if (this.ball.moveX === DIRECTION.RIGHT)\n              this.paddle.y -= this.paddle.speed / 1.5;\n            else this.paddle.y -= this.paddle.speed / 4;\n          }\n          if (this.paddle.y < this.ball.y - this.paddle.height / 2) {\n            if (this.ball.moveX === DIRECTION.RIGHT)\n              this.paddle.y += this.paddle.speed / 1.5;\n            else this.paddle.y += this.paddle.speed / 4;\n          }\n\n          // Handle paddle (AI) wall collision\n          if (this.paddle.y >= this.canvas.height - this.paddle.height)\n            this.paddle.y = this.canvas.height - this.paddle.height;\n          else if (this.paddle.y <= 0) this.paddle.y = 0;\n\n          // Handle Player-Ball collisions\n          if (\n            this.ball.x - this.ball.width <= this.player.x &&\n            this.ball.x >= this.player.x - this.player.width\n          ) {\n            if (\n              this.ball.y <= this.player.y + this.player.height &&\n              this.ball.y + this.ball.height >= this.player.y\n            ) {\n              this.ball.x = this.player.x + this.ball.width;\n              this.ball.moveX = DIRECTION.RIGHT;\n            }\n          }\n\n          // Handle paddle-ball collision\n          if (\n            this.ball.x - this.ball.width <= this.paddle.x &&\n            this.ball.x >= this.paddle.x - this.paddle.width\n          ) {\n            if (\n              this.ball.y <= this.paddle.y + this.paddle.height &&\n              this.ball.y + this.ball.height >= this.paddle.y\n            ) {\n              this.ball.x = this.paddle.x - this.ball.width;\n              this.ball.moveX = DIRECTION.LEFT;\n            }\n          }\n        }\n\n        // Handle the end of round transition\n        // Check to see if the player won the round.\n\n        if (this.player.score === rounds[this.round]) {\n          // Check to see if there are any more rounds/levels left and display the victory screen if\n          // there are not.\n          if (!rounds[this.round + 1]) {\n            this.over = true;\n            console.log(\"player won\");\n\n            let res = updateScore(\"win\", dispatch);\n\n            console.log(this.player.score);\n            setTimeout(function () {\n              Game.endGameMenu(\"Winner!\");\n            }, 1000);\n          } else {\n            // If there is another round, reset all the values and increment the round number.\n            this.color = this._generateRoundColor();\n            this.player.score = this.paddle.score = 0;\n            this.player.speed += 0.5;\n            this.paddle.speed += 1;\n            this.ball.speed += 1;\n            this.round += 1;\n          }\n        }\n        // Check to see if the paddle/AI has won the round.\n        else if (this.paddle.score === rounds[this.round]) {\n          this.over = true;\n          console.log(\"ai won\");\n\n          updateScore(\"loose\", dispatch);\n          console.log(this.player.score);\n          setTimeout(function () {\n            Game.endGameMenu(\"You loose!\");\n          }, 1000);\n        }\n      },\n\n      // Draw the objects to the canvas element\n      draw: function () {\n        // Clear the Canvas\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        // Set the fill style to black\n        this.context.fillStyle = this.color;\n\n        // Draw the background\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        // Set the fill style to white (For the paddles and the ball)\n        this.context.fillStyle = \"#fff\";\n\n        // Draw the Player\n        this.context.fillRect(\n          // **********\n          this.player.x,\n          this.player.y,\n          this.player.width,\n          this.player.height\n        );\n\n        // Draw the Paddle\n        this.context.fillRect(\n          // **********\n          this.paddle.x,\n          this.paddle.y,\n          this.paddle.width,\n          this.paddle.height\n        );\n\n        // Draw the Ball\n        if (Game._turnDelayIsOver.call(this)) {\n          this.context.fillRect(\n            this.ball.x, // **********\n            this.ball.y, // **********\n            this.ball.width, // **********\n            this.ball.height\n          );\n        }\n\n        // Draw the net (Line in the middle)\n        this.context.beginPath();\n        this.context.setLineDash([7, 15]);\n        this.context.moveTo(this.canvas.width / 2, this.canvas.height - 120);\n        this.context.lineTo(this.canvas.width / 2, 140);\n        this.context.lineWidth = 10;\n        this.context.strokeStyle = \"#ffffff\";\n        this.context.stroke();\n\n        // Set the default canvas font and align it to the center\n        this.context.font = \"100px Courier New\";\n        this.context.textAlign = \"center\";\n\n        // Draw the players score (left)\n        this.context.fillText(\n          this.player.score.toString(),\n          this.canvas.width / 2 - 300,\n          200\n        );\n\n        // Draw the paddles score (right)\n        this.context.fillText(\n          this.paddle.score.toString(),\n          this.canvas.width / 2 + 300,\n          200\n        );\n\n        // Change the font size for the center score text\n        this.context.font = \"30px Courier New\";\n\n        // Draw the winning score (center)\n        //  this.context.fillText(\n        //    \"Round \" + (Game.round + 1),\n        //    this.canvas.width / 2,\n        // 35\n        //  );\n\n        // Change the font size for the center score value\n        this.context.font = \"40px Courier\";\n\n        // // Draw the current round number\n        //  this.context.fillText(\n        //    rounds[Game.round] ? rounds[Game.round] : rounds[Game.round - 1],\n        //    this.canvas.width / 2,\n        //    100\n        //  );\n      },\n\n      loop: function () {\n        Game.update();\n        Game.draw();\n\n        // If the game is not over, draw the next frame.\n        if (!Game.over) requestAnimationFrame(Game.loop);\n      },\n\n      listen: function () {\n        document.addEventListener(\"keydown\", function (key) {\n          // Handle the 'Press any key to begin' function and start the game.\n          if (Game.running === false) {\n            Game.running = true;\n            window.requestAnimationFrame(Game.loop);\n          }\n\n          // Handle up arrow and w key events\n          if (key.keyCode === 38 || key.keyCode === 87)\n            Game.player.move = DIRECTION.UP;\n\n          // Handle down arrow and s key events\n          if (key.keyCode === 40 || key.keyCode === 83)\n            Game.player.move = DIRECTION.DOWN;\n        });\n\n        // Stop the player from moving when there are no keys being pressed.\n        document.addEventListener(\"keyup\", function (key) {\n          Game.player.move = DIRECTION.IDLE;\n        });\n      },\n\n      // Reset the ball location, the player turns and set a delay before the next round begins.\n      _resetTurn: function (victor, loser) {\n        this.ball = Ball.new.call(this, this.ball.speed);\n        this.turn = loser;\n        this.timer = new Date().getTime();\n\n        victor.score++;\n      },\n\n      // Wait for a delay to have passed after each turn.\n      _turnDelayIsOver: function () {\n        return new Date().getTime() - this.timer >= 1000;\n      },\n\n      // Select a random color as the background of each level/round.\n      _generateRoundColor: function () {\n        var newColor = colors[Math.floor(Math.random() * colors.length)];\n        if (newColor === this.color) return Game._generateRoundColor();\n        return newColor;\n      },\n    };\n\n    Game.initialize();\n  }, []);\n\n  // game logout function\n  function handleLogout() {\n    dispatch(handleUserLogout());\n  }\n  // game rankings function\n  function handleRankings() {\n    let response = handleUserRankings();\n    response.then((val) => {\n      console.log(val);\n\n      let rankedVal = val.map((item) => {\n        return {\n          username: item.username,\n          wins: item.wins,\n          defeats: item.defeats,\n          rank : item.wins - item.defeats\n\n        }\n      })\n      let sortedrankedVal = rankedVal.sort((a,b) => (a.rank > b.rank) ? 1 : ((b.rank > a.rank) ? -1 : 0))\n\n      setShowTable(sortedrankedVal)\n    });\n    console.log(response);\n  }\n  return (\n    <div>\n      <canvas className=\"canvas\"></canvas>\n      <button className=\"logout\" onClick={handleLogout}>\n        Logout\n      </button>\n      <button className=\"logout rankings\" onClick={handleRankings}>\n        Rankings\n      </button>\n      {\n        showTable &&\n        <div className=\"rankingsmodal\">\n          <table>\n            <thead>\n              <tr>\n                <th>Rank</th>\n                <th>Name</th>\n                <th>Wins</th>\n                <th>Looses</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                showTable && showTable.map((item, index) => {\n\n                  return (\n                    <tr>\n                      <td class=\"rank\">{index + 1}</td>\n                      <td class=\"team\">{item.username}</td>\n                      <td class=\"points\">{item.wins}</td>\n                      <td class=\"up-down\">{item.defeats}</td>\n                    </tr>\n                  )\n                })\n              }\n              \n            </tbody>\n          </table>\n          <button className='closebtn'>Close</button>\n        </div>\n\n      }\n    </div>\n  );\n}\n\nexport default Game;\n","import React from \"react\";\nimport \"./index.css\";\nimport { handleUserLogin } from \"../../actions/authAction\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Login() {\n  const dispatch = useDispatch();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"form submit\");\n\n    try {\n      dispatch(handleUserLogin(e.target.email.value, e.target.password.value));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <div className=\"loginwrapper\">\n      <h2>Login </h2>\n\n      <form onSubmit={handleSubmit} method=\"post\">\n        <div className=\"imgcontainer\">\n          <img\n            src=\"https://www.w3schools.com/howto/img_avatar2.png\"\n            alt=\"Avatar\"\n            className=\"avatar\"\n          />\n        </div>\n        <div className=\"container\">\n          <label for=\"email\">\n            <b>Email</b>\n          </label>\n          <input type=\"email\" placeholder=\"Enter Email\" name=\"email\" required />\n\n          <label for=\"password\">\n            <b>Password</b>\n          </label>\n          <input\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            name=\"password\"\n            required\n            minlength=\"8\"\n          />\n\n          <button type=\"submit\">Login</button>\n          <label>\n            <input type=\"checkbox\"  name=\"remember\" /> Remember\n            me\n          </label>\n        </div>\n\n        <div className=\"container\" style={{ backgroundColor: \"#f1f1f1\" }}>\n            <Link className=\"bottomlinks\" to=\"/signup\">Sign up</Link>\n          \n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React  from \"react\";\nimport './index.css';\nimport { useNavigate } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\n\nfunction Signup() {\n\n  let history = useNavigate()\n\n  async function handleSignup(e) {\n    e.preventDefault()\n    \n\n    let formValues = {\n      email : e.target.email.value,\n      password : e.target.password.value,\n      name : e.target.name.value\n    }\n\n    try {\n\n      let signup = await fetch('https://gameback-end.herokuapp.com/signup', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(formValues)\n      })\n\n      let result = await signup.json();\n\n      console.log(result)\n\n      \n      alert(result.status)\n      if(result.status === 'success') {\n\n        history(\"/\")\n      }\n\n\n    } catch(e) {\n      console.log(e);\n    }\n  }\n  \n  \n\n  \n  \n  return(\n    <div className=\"loginwrapper\">\n      <h2>Signup </h2>\n\n      <form onSubmit={handleSignup} method=\"post\">\n        <div className=\"imgcontainer\">\n          <img src=\"https://www.w3schools.com/howto/img_avatar2.png\" alt=\"Avatar\" className=\"avatar\" />\n        </div>\n        <div className=\"container\">\n          <label for=\"name\">\n            <b>Name</b>\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Name\"\n            name=\"name\"\n            required\n          />\n          <label for=\"email\">\n            <b>Email</b>\n          </label>\n          <input\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            name=\"email\"\n            required\n          />\n          <label for=\"password\">\n            <b>Password</b>\n          </label>\n          <input\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            name=\"password\"\n            minlength=\"8\"\n            required\n          />\n\n          <button type=\"submit\">Signup</button>\n\n        </div>\n\n        <div className=\"container\" style={{ backgroundColor: \"#f1f1f1\" }}>\n         \n             <Link className=\"bottomlinks\" to=\"/\">Login</Link>\n        </div>\n      </form>\n    </div>\n  )\n   \n}\n\nexport default Signup;\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Game from \"./components/Game/index\";\nimport Login from \"./components/Login/index\";\nimport Signup from \"./components/Signup/index\";\n\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const loginState = useSelector((state) => state.authState.userLoggedIn)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    let checkLogin = async function () {\n      let checkLogin = await fetch(\"https://gameback-end.herokuapp.com\", {\n        method: \"GET\",\n        credentials: \"include\",\n      })\n\n      let result = await checkLogin.json()\n\n      console.log(result)\n      if(result.login) {\n        \n        dispatch({ type: 'USER_LOGIN_TRUE'})\n      } else {\n        dispatch({ type: 'USER_LOGIN_FALSE'})\n      }\n    }\n\n    checkLogin()\n  }, [])\n\n  return (\n    <div>\n      {\n        loginState !== null &&\n\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Routes>\n            <Route path=\"/game\" element={<Game />}></Route>\n            <Route path=\"/signup\" element={<Signup />}></Route>\n            <Route exact path=\"/\" element={loginState ? <Game /> : <Login />}></Route>\n           \n          </Routes>\n        </BrowserRouter>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { USER_LOGIN_TRUE, USER_LOGOUT, USER_LOGIN_FALSE } from \"../actions\";\r\n\r\n\r\n\r\nconst INITIAL_STATE = { userLoggedIn: null }\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_TRUE: {\r\n            return {\r\n                ...state,\r\n                userLoggedIn: true,\r\n\r\n            }\r\n        }\r\n        case USER_LOGIN_FALSE: {\r\n            return {\r\n                ...state,\r\n                userLoggedIn: false,\r\n\r\n            }\r\n        }\r\n        case USER_LOGOUT: {\r\n            return {\r\n                ...state,\r\n                userLoggedIn: false,\r\n\r\n            }\r\n        }\r\n        \r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer  from \"./authReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    authState: authReducer,\r\n})","import React  from \"react\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport function ReduxProvider({ children }) {\r\n  \r\n  return <Provider store={store}>{children}</Provider>;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ReduxProvider } from './providers/ReduxProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider>\n      <App />\n    </ReduxProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}